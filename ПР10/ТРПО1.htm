<html><head><title>ТРПО</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta content="MSHTML 6.00.2900.2180" name="GENERATOR">
<style type="text/css">
<!--
.style3 {color: #660066}
.style4 {font-weight: bold; color: #660033; }
.style5 {
	font-size: 18px;
	font-weight: bold;
	color: #660033;
}
-->
</style>
</head>
<body>
<div align="center">
  <p class="style4 style3" align="left"><a href="http://prep.scc/~emp/uch/trpo/index.htm">тематический план</a> | <a href="http://prep.scc/~emp/uch/trpo/pr_10/pr_1100.htm">Предисловие </a></p>
  <hr>
  <span class="style5">Практическая работа 10. Разработка справочной системы. </span>
  <hr>
  <p class="style4 style3" align="center"><strong>1. Особенности технологии разработки справочной системы. </strong></p>
  <p align="left">С точки зрения технологии использования файлов формата
 CHM основой работы является наличие этапа компиляции исходных 
материалов в выходной файл. В свою очередь, исходные данные представляют
 собой набор файлов трех видов: </p>
  <ul>
    <li>
      <div align="left"><em align="left"><strong>файлы тем (разделов)</strong></em> справочника ( Help topic files или HTML topic files ), содержащие собственно информационное наполнение справочника; </div>
    </li>
    <li>
      <div align="left"><em align="left"><strong>файлы оглавления (Contents files),</strong></em> обеспечивающие представление разделов и страниц справочника на вкладке Содержание; </div>
    </li>
    <li>
      <div align="left"><em align="left"><strong>индексные файлы (Index files)</strong></em>, необходимые для реализации механизма поис­ка по ключевым словам. </div>
    </li>
  </ul>
  <p align="left">Подготовка перечисленных файлов как раз и составляет 
основную часть работы над справочником. Перед тем как приступить к 
работе, автор справочника должен иметь ответы на три вопроса: </p>
  <ol>
    <li>
      <div align="left"> Каким образом предполагается распространять 
справочную систему среди потенциальных пользователей? В частности, будет
 ли она поставляться вместе с программным продуктом, высылаться 
пользователям дополнительно или использоваться в качестве оперативной 
технической поддержки, предоставляемой через Интернет. </div>
    </li>
    <li>
      <div align="left"> Что собой представляет предполагаемая целевая аудитория (пользователи), которой предназначается справочная информация? </div>
    </li>
    <li>
      <div align="left">Существуют ли какие-либо дополнительные 
ограничения на объем, форму представления и способы использования 
справочной информации? </div>
    </li>
  </ol>
  <p align="left">Ответы на перечисленные вопросы определяют выбор 
формата справочника, содержание и стиль изложения справочных материалов,
 а также многое другое. Однако работа над справочником не завершается 
после получения выходного СНМ- или HLP -файла. Ведь даже самый, казалось
 бы, удачный проект может содержать разного рода ошибки. Многие из них 
могут быть обнаружены лишь в результате тестирования, в том числе с 
привлечением пользователей. Более того, модификация программного 
продукта обязательно потребует соответствующей коррекции справочной 
системы. Другими словами, <em>справочную систему, как и программный продукт в целом, необходимо сопровождать. </em>И
 от того, насколько продуманными и обоснованными будут решения в ходе 
работы над первоначальным проектом, зависят также удобство и простота 
сопровождения. </p>
  <p align="left">Итак, в общем случае работа над справочником предполагает выполнение следующих действий. </p>
  <ul>
    <li>
      <div align="left"> Выбор формата справочника и адекватных инструментальных средств разработки. </div>
    </li>
    <li>
      <div align="left">Определение основных требований к содержанию, объему, стилю изложения и оформления. </div>
    </li>
    <li>
      <div align="left">Подготовка текста и необходимых мультимедийных элементов справочника. </div>
    </li>
    <li>
      <div align="left"> Проектирование навигационной структуры справочника и создание перекре­стных перекрестных ссылок между разделами </div>
    </li>
    <li>
      <div align="left">Разработка файла оглавления. </div>
    </li>
    <li>
      <div align="left">Определение перечня ключевых слов и создание индексного файла. </div>
    </li>
    <li>
      <div align="left"> Компиляция проекта. </div>
    </li>
    <li>
      <div align="left"> Автономное тестирование справочной системы. </div>
    </li>
    <li>
      <div align="left">Привязка справочной системы к приложению. </div>
    </li>
    <li>
      <div align="left"> Тестирование справочной системы в составе приложения. </div>
    </li>
  </ul>
  <p align="left">Из перечисленных выше действий только процедура 
компиляции зависит от используемых инструментальных средств и (в меньшей
 степени) от формата справочника. </p>
  <p class="style4" align="center"><strong>2. Подготовка текста </strong></p>
  <p align="left">Несколько проще определить содержание справочной 
информации, когда выполняется заказная работа и потенциальный 
потребитель продукта известен. Сложнее когда программное средство 
создается для рынка. Однако в обоих случаях автору справочной системы 
требуется найти ответы на два вопроса: о чем писать и как писать. </p>
  <p class="style4" align="center">3. О чем писать </p>
  <p align="left">Что можно использовать в качестве «шаблона» при 
составлении справочной документации? Теоретически можно использовать в 
качестве образца справочную систему известной (популярной) программы, 
относящейся к той же предметной <strong></strong>области. Но, во-первых,
 нет уверенности, что именно так должна выглядеть «настоящая» справочная
 система, и, во-вторых, неизвестно, каково отношение пользователей к 
выбранному вами «шаблону». Кроме того, вновь созданное программное 
средство может просто не иметь аналогов. </p>
  <p align="left">И вот здесь на сцену вновь выходят стандарты, в том 
числе отечественные. Да, они весьма несовершенны. Да, они уже изрядно 
морально устарели, но они вполне пригодны в качестве отравной точки, и, 
кроме того, их пока не отменили. </p>
  <p align="left">Речь идет в первую очередь о группе стандартов, которая называется <em><strong>«Единая система программной документации» (ЕСПД).</strong></em>
 В эту группу входит почти три десятка документов, регламентирующих 
состав и правила оформления программной документации, выполненных 
печатным способом. Теперь более подробные комментарии относительно 
сведений, которые хотели бы видеть в вашей справочной системе 
разработчики стандарта IEEE . </p>
  <p align="left"><strong>Раздел «Назначение программы»  (Purpose)</strong>
 содержит описание цели документа и характеристик предполагаемой 
аудитории.
 Если предполагается наличие различ­ных групп пользователей, следует 
дать пояснение для каждой из них, снабдив ссылкой на разделы, 
соответствующие их интересам. Если дифференциация между группами 
пользователей велика, рассмотрите возможность разработки нескольких 
специализированных руководств. </p>
  <p align="left"><strong>Раздел «Предметная область проекта» (Scope of Project) </strong>содержит
 краткий обзор программного продукта. Здесь приводится пояснение, кто 
должен использовать продукт и для чего. Дается характеристика задач, 
решение которых он обеспечивает, а также перечень задач, к которым он 
отношения не имеет. В этот же раздел помещаются лицензионные ограничения
 в использовании или копировании программного средства, предлагаемые 
гарантии или договорные обязательства. Если в тексте справочника 
применяется специальное стилевое оформление, здесь следует пояснить его 
смысл (например: «названия элементов интерфейса выделены жирным 
шрифтом»). Приводится контактная информация службы технической 
поддержки. </p>
  <p align="left"><strong>Раздел «Глоссарий» (Glossary)</strong> 
содержит определения технических терминов, использован­ных в 
руководстве. При составлении глоссария следует исходить из 
предположения, что пользователи знают о рассматриваемой предметной 
области меньше, чем могли бы (на ваш взгляд). </p>
  <p align="left"><strong>Раздел «Ссылки» (Reference ' s) </strong>представляет библиографию с указанием печатных и других источников, использованных при написании руководства. </p>
  <p align="left"><strong>Раздел «Обзор документа» (Overview of Document) </strong>описывает содержание и организацию остальной части руководства. </p>
  <p align="left"><strong>Глава «Руководство пользователя» (Instructional Manual)</strong>
 должно содержать пошаговое описание процедур, обеспечивающих решение 
задач пользователя. Ее разделение на части определяется исключительно 
спецификой программного средства и стремлением к наиболее удобному 
восприятию пользователем. Вместе с тем, она обязательно должна включать 
описание работы с программой в обычном режиме и описание особых 
ситуаций, которые мот возникнуть в процессе работы пользовался. При этом
 справка по особым ситуациям может быть приведена в виде ссылок 
(примечаний) к основному тексту раздела. Например, справка к программе 
распознавания текста может содержать ссылку «Что делать, если текст 
распознается с большим числом ошибок». </p>
  <p align="left"><strong>В главу «Справочное руководство» (User Reference Manual) </strong>рекомендуется
 включать два основных раздела: «Listing of Services (Перечень 
функциональных возможностей) и Error Messages and Error Recovery 
(Сообщения об ошибках и устранение ошибок). Первый из них представляет 
собой упорядоченный по алфавиту список функций (команд), реализуемых 
программой, с указанием необходимых параметров, особенностей их 
выполнения, ограничения и т. д. Второй раздел — это упорядоченный по 
алфавиту список всех сообщений об ошибках, выдаваемых системой, с 
описанием методов их предупреждения и устранения последствий. </p>
  <p class="style4" align="center">4. Как писать </p>
  <p align="left">Основное отличие любого справочника (хоть бумажного, хоть электронного) от «обычной» книги состоит в том, что он <em>не предназначен для последовательного чтения </em>от
 начала до конца. Более тою, зачастую пользователи знакомятся с 
содержанием справки от конца к началу. То есть сначала их интересует 
назначение конкретного элемента интерфейса, затем способы его 
использования для реше­ния определенной задачи, и лишь после этого 
пользователя может заинтересовать общая концепция построения интерфейса 
программы (чтобы в остальных элементax разобраться самостоятельно, без 
помощи справочника). Например, начинающего пользователя может 
заинтересовать на панели инструментов кнопка с названием «Сохранить 
как...». Подведя к ней указатель мыши, пользователь увидит всплывающую 
подсказку типа «Позволяет сохранить документ в любом из поддерживаемых 
форматов». Его может заинтересовать фраза «поддерживаемые форматы», и он
 попытается отыскать ее в справочнике. Если форматы различаются, 
например, вариантом кодировки текста, то пользователь может захотеть 
узнать побольше о существую щих кодировках. Для этого ему придется 
открыть вводный раздел справочника, содержащий описание принципов работы
 с текстовыми документами.</p>
  <p align="left">С неменьшей вероятностью пользователь может «влезть» в
 справочник и где-то посередине и после этого отправиться (опять-таки с 
равной вероятностью) либо в начало справочника (к вводному разделу), 
либо в его конец (например, чтобы посмотреть список сообщений об 
ошибках). </p>
  <p align="left">Какой же следует вывод из сказанного выше? Заключается
 он в том, что содержание справочника должно представлять собой 
своеобразную спираль, «раскручивающуюся» снизу вверх и охватывающую все 
более общие вопросы работы с программой. И на каком бы «витке» этой 
спирали пользователь ни попал внутрь справочника, он должен иметь 
возможность перейти на соседний виток, сохранив первоначальный контекст 
поиска информации. </p>
  <p align="left">Что для этого нужно? Не стесняться повторять на 
различных уровнях справочника одно и то же, но разными словами, а именно
 — с разной степенью детализации. </p>
  <p align="left"><strong>В качестве примера рассмотрим фрагмент справочной системы</strong> программы, предназначенной для моделирования систем массового обслуживания. </p>
  <p align="left">Предположим, что в программе предусмотрены два типа 
объектов для моделирования буфера заявок: Очередь и Стек. Каждый из них 
обладает собственным набором атрибутов, устанавливаемых в 
соответствующих диалоговых окнах (имя, максимальная емкость, допустимое 
время ожидания, вид значка для визуального представления). </p>
  <p align="left">Тогда в справочной системе термины «очередь» и «стек» должны фигурировать как минимум четырежды. </p>
  <ul>
    <li>
      <div align="left"> В концептуальной справке при описании 
функциональных возможностей про­граммы; например: «Для моделирования 
буфера заявок предусмотрены два типа объектов: Очередь и Стек. Каждый из
 них обладает собственным набором атрибутов". </div>
    </li>
    <li>
      <div align="left">В процедурной справке при описании процедуры 
построения модели; напри­мер: «Чтобы добавить в модель буфер заявок, 
выполните следующие действия: 1, На панели Ресурсы щелкните на кнопке 
Очередь или Стек,. 2. Щелкните дважды на значке объекта, чтобы открыть 
панель его атрибутов...». </div>
    </li>
    <li>
      <div align="left">В справочнике при описании диалоговой панели 
Ресурсы; например: "Кнопка Очередь позволяет добавить в модель буфер 
заявок типа Очередь...". </div>
    </li>
    <li>
      <div align="left">В контекстной справке «Что это такое?», 
относящейся к кнопке Очередь (рас­положенной на панели Ресурсы); 
например: "Добавляет в модель буфер заявок типа Очередь". </div>
    </li>
  </ul>
  <p align="left">Кроме того, если в справочной системе предусмотрен глоссарий, то оба термина (очередь и стек) должны присутствовать и там. </p>
  <p align="left">Для динамического связывания отдельных "витков 
спирали" служат гиперссылки. Именно на них и ложится ответственность за 
сохранение единого информационного контекста при «путешествии» 
пользователя по словарю. Для рассмотренного выше примера в качестве 
гиперссылок могут использоваться как раз те термины, о которых шла речь 
(очередь и стек). Однако гиперссылки не всесильны и в ряде случаев не 
могут заменить альтернативных средств навигации по справочнику, (списка 
разделов, поиска по ключевым словам, полнотекстового поиска). </p>
  <p align="left">Отдельного обсуждения в данном подразделе (напомним, он называется «Как писать») заслуживают <strong>правила выбора заголовков </strong>тем и отдельных страниц справочника. </p>
  <p align="left">Заголовки в справочнике несут тройную нагрузку: </p>
  <ol>
    <li>
      <div align="left"> позволяют пользователю быстро определить содержание соответствующей темы; </div>
    </li>
    <li>
      <div align="left">выдаются системой в качестве перечня альтернативных маршрутов, найденных по ключевому слову; </div>
    </li>
    <li>
      <div align="left"> позволяют пользователю определить его местоположение «внутри» справоч­ника. </div>
    </li>
  </ol>
  <p align="left">Исходя из этого, каждый заголовок должен по возможности: </p>
  <ul>
    <li>
      <div align="left">быть кратким; </div>
    </li>
    <li>
      <div align="left"> иметь однозначную смысловую трактовку; </div>
    </li>
    <li>
      <div align="left">отражать местоположение темы (страницы) в общей структуре справочника. </div>
    </li>
  </ul>
  <p align="left">Разумеется, эти требования весьма противоречивы. Ведь 
чем короче заголовок, тем труднее передать с его помощью суть темы. И 
наоборот.<em> Например, у средневеко вых писателей были очень популярны 
такие заголовки: «Глава ...дцатая, повеству­ющая о том, как доблестный 
рыцарь чуть не угодил в западню, расставленную ему злым колдуном, но 
сумел избежать ее благодаря своей прозорливости и помощи прекрасной 
принцессы, неожиданно спустившейся с небес на вертолете». Дальше главу 
„дцатую, собственно говоря, можно было бы и не читать. </em></p>
  <p align="left">За счет чего можно обеспечить требуемую краткость? 
Один из способов не использовать в заголовках глаголы и глагольные формы
 (причастия и деепричастия), а стараться обходиться одними 
существительными. Вот, например, как мог бы выглядеть приведенный выше 
заголовок без глаголов: <em>«Спасение рыцаря из западни колдуна. Появление вертолета с принцессой». </em></p>
  <p align="left">Теперь по поводу информативности заголовка. Как ее 
добиться? Достаточно просто: составьте его из ключевых слов темы 
(страницы). То есть <em>прежде, чем выбирать заголовок, необходимо написать собственно текст, а затем определить в нем ключевые слова и/или фразы.</em>
 Эта работа тем более полезна, что позволит получить список ключевых 
слов (который все равно потребуется для вкладки Указатель справочника). 
Причем в этом списке пользователь однозначно обнаружит тему, заголовок 
которой на 90 % (минимум на 70-80 %) совпадает с нужным ключевым словом.
 В качестве примера можно опять-таки сослаться на приведенный выше 
«существительный» вариант заголовка про рыцаря. </p>
  <p align="left">А как в заголовке отразить местоположение темы? Так 
же, как обычно поступают, озаглавливая различные каталоги и 
классификаторы» то есть используя в заголовке часть заголовка более 
высокого уровня. Например (вернемся теперь к гипотетической программе 
для моделирования): </p>
  <ul>
    <li>
      <div align="left">Возможный заготовок раздела, описывающего панель Ресурсы: <em>«Средства построения схемы модели. Панель Ресурсы». </em></div>
    </li>
    <li>
      <div align="left">Заголовок раздела следующего уровня: «<em>Панель Ресурсы. Кнопка Очередь».</em> </div>
    </li>
  </ul>
  <p align="left">Следует отметить, что использовать в заголовке 
«трехзвенные» и еще более длинные конструкции нецелесообразно по 
следующим причинам. Во-первых, вообще не рекомендуется строить 
справочник с большим числом уровней вложенности (подробнее об этом — » 
следующем разделе). Во-вторых, если у вас все-таки получилась объемная 
тема с несколькими уровнями вложенности, то лучше для ориентирования 
пользователя задействовать другие выразительные средства. Например, 
специальную навигационную строку или неперелистываемую область окна. </p>
  <p class="style4" align="center">5. Описание структуры справочника </p>
  <p align="left">На самом деле структура справочника (то есть состав и 
взаимное расположение его тем) это неотъемлемая часть системы навигаций 
по справочнику. И не случайно имеющаяся во всех рассмотренных ранее 
форматах вкладка «Содержание» входит в состав панели навигации 
справочника. Тем не менее, мы рассмотрим эти два понятия раздельно. 
Объясняется это важностью правильного проектирования структуры 
справочника. </p>
  <p class="style4" align="center">6. Выбор структуры справочника </p>
  <p align="left">В качестве исходной посылки повторим еще раз:<em> справочник не предназначен для последовательного чтения пользователем от начала до конца. </em>Исходя
 из этого, разбиение справочника на темы должно обеспечивать 
пользователю удобный вход в справочник в той точке, которая 
соответствует «сиюминутным» интересам пользователя. Такой подход 
практикуется многими крупными компаниями — производителями программного 
обеспечения. Перечислим  возможные сценарии поведения пользователя при 
изучении программы с привлечением справочной системы: </p>
  <p align="left"><em><strong>«быстрый старт» </strong></em>— характерен
 для «торопливых» пользователей, желающих начать работать с программой, 
получив о ней минимальные сведения (как установить и подготовить к 
работе программный продукт, как начать работать с ним); </p>
  <p align="left"><em><strong>«планомерное освоение» </strong></em>— 
характерно для весьма малочисленной категории поль­зователей, желающих 
освоить возможности продукта по максимуму, продвигаясь от простого к 
сложному; </p>
  <p align="left"><em><strong>«освоение конкретной процедуры» </strong></em>— характерно для «случайных» пользователей и пользователей, работающих с программой время от времени; </p>
  <p align="left"><em><strong>«уяснение технических деталей»</strong></em>
 — имеет место при работе высококвалифициро­ванных пользователей, 
способных самостоятельно освоить основные функции программы, но желающих
 уточнить конкретные особенности решения определенных задач. </p>
  <p align="left">Разумеется, возможны и другие варианты, в том числе 
представляющие собой некую комбинацию приведенных выше. Однако 
углубляться здесь в поиски альтернатив не стоит, поскольку получить 
исчерпывающий список все равно невозможно. </p>
  <p align="left">Каждому из перечисленных сценариев должна соответствовать отдельная часть справочника с характерным названием. </p>
  <p align="left">Важное следствие из сказанного: крупных («корневых») 
частей справочника не должно быть много; это позволит пользователю легко
 найти именно то, что ему нужно. </p>
  <p align="left">Теперь несколько слов о дальнейшем делении частей справочника на темы и страницы. </p>
  <p align="left">Здесь подход должен быть аналогичен тому, который 
приветствуется в веб-дизайне: материал подраздела (страницы) справочника
 не должен превышать по объе­му одного экрана, а количество страниц в 
разделе (теме) должно быть более 5-6. Чтобы повысить компактность 
страницы справочника, можно вынести часть пояснительной информации во 
всплывающие окна и обеспечить доступ к ней через соответствующие ссылки.
 </p>
  <p align="left">Если не удается выдержать ограничения на количество 
страниц в тексте, то лучше ввести дополнительную тему и создать на нее 
ссылку «Смотри также..». Исключение по числу страниц могут составлять 
чисто справочные темы (типа описания библиотечных функций) Это не 
страшно, поскольку сохранять логическую увязку между страницами в таких 
темах не требуется. Ее, как правило, заменяет упорядочивание страниц по 
какому-либо естественному (для данной предметной области) признаку или 
по алфавиту. </p>
  <p align="left">И, наконец, рекомендация по числу уровней вложенности 
(заимствованная у Microsoft ): таких уровней внутри корневой части 
справочника не следует вводить более трех. </p>
  <p align="left">&nbsp; </p>
  <hr>
  <p class="style4 style3" align="left"><a href="http://prep.scc/~emp/uch/trpo/index.htm">тематический план</a> | <a href="http://prep.scc/~emp/uch/trpo/pr_10/pr_1100.htm">Предисловие </a></p>
</div>


</body></html>